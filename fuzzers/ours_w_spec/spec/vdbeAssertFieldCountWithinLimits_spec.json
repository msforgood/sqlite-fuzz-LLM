{
  "target": { 
    "function": "vdbeAssertFieldCountWithinLimits",
    "fc": "vdbe_assert_field_count_001",
    "category": "VDBE",
    "file": "vdbeaux.c",
    "line": 4416
  },
  "struct_spec": {
    "key_params": {
      "nKey": "int",
      "pKey": "void*",
      "pKeyInfo": "KeyInfo*"
    },
    "key_info": {
      "nField": "u16",
      "nAllField": "u16",
      "enc": "u8",
      "db": "sqlite3*",
      "nKeyField": "u16",
      "aColl": "CollSeq**"
    },
    "record_header": {
      "szHdr": "u32",
      "idx": "u32",
      "nField": "int",
      "serialType": "u32"
    }
  },
  "validation_spec": {
    "memory_align": 8,
    "key_size": {"min": 0, "max": 1048576},
    "field_count": {"min": 0, "max": 2000},
    "header_size": {"min": 1, "max": 65536},
    "serial_types": {"min": 0, "max": 12},
    "encoding_types": ["UTF8", "UTF16LE", "UTF16BE"]
  },
  "fc_mapping": {
    "source": "vdbeaux.c:4416",
    "rationale": "vdbeAssertFieldCountWithinLimits - Critical field count validation for record integrity",
    "api_level": "internal"
  },
  "constraints": {
    "max_input_size": 4096,
    "min_input_size": 20,
    "endianness": "LE",
    "sqlite_version": "3.51.0",
    "requires_initialization": true
  },
  "notes": {
    "preconditions": [
      "sqlite3_initialize() called",
      "Valid record key data provided",
      "Valid KeyInfo structure",
      "Database not corrupted (CORRUPT_DB check)"
    ],
    "side_effects": [
      "Variable-length integer parsing",
      "Record header validation",
      "Field count verification against KeyInfo",
      "Assert failures on limit violations"
    ],
    "error_conditions": [
      "Assert failure: nField > pKeyInfo->nAllField",
      "Assert failure: nKey < 0",
      "Assert failure: szHdr > nKey",
      "CORRUPT_DB early return"
    ]
  }
}