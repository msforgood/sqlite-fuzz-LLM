{
  "target": {
    "function": "sqlite3_value_free",
    "fc": "vdbe_004",
    "category": "VDBE", 
    "file": "vdbeapi.c",
    "line": 593
  },
  "struct_spec": {
    "sqlite3_value": {
      "flags": "u16",
      "enc": "u8",
      "eSubtype": "u8", 
      "n": "int",
      "z": "char*",
      "zMalloc": "char*",
      "szMalloc": "int",
      "uTemp": "u32",
      "db": "sqlite3*",
      "xDel": "void(*)(void*)"
    },
    "value_config": {
      "valueType": "int",
      "freeMode": "int",
      "nullifyAfter": "int"
    }
  },
  "validation_spec": {
    "memory_align": 8,
    "value_types": ["NULL", "INTEGER", "REAL", "TEXT", "BLOB"],
    "free_modes": ["NORMAL", "FORCE_CLEANUP", "NULL_ONLY"],
    "memory_ownership": ["STATIC", "EPHEMERAL", "DYNAMIC"], 
    "destructor_support": true,
    "requires_initialization": true
  },
  "fc_mapping": {
    "source": "vdbeapi.c:593",
    "rationale": "sqlite3_value_free - Critical VDBE value cleanup function",
    "api_level": "public"
  },
  "constraints": {
    "max_input_size": 1024,
    "min_input_size": 16,
    "endianness": "LE",
    "sqlite_version": "3.51.0",
    "requires_initialization": true
  },
  "notes": {
    "preconditions": [
      "sqlite3_initialize() called",
      "Valid sqlite3_value pointer or NULL",
      "No active references to the value", 
      "Proper memory ownership established"
    ],
    "side_effects": [
      "Value memory freed if dynamically allocated",
      "Destructor function called if present",
      "Value object invalidated",
      "Associated string/blob data cleaned up"
    ],
    "error_conditions": [
      "SQLITE_MISUSE: Invalid value pointer",
      "SQLITE_CORRUPT: Value corruption detected",
      "Double-free: Value already freed"
    ]
  }
}