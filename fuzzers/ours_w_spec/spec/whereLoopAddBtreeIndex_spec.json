{
  "target": { 
    "function": "whereLoopAddBtreeIndex",
    "fc": "query_where_loop_add_btree_index_001",
    "category": "Query", 
    "file": "where.c",
    "line": 3125
  },
  "struct_spec": {
    "where_loop_builder": {
      "pWInfo": "WhereInfo*",
      "pOrSet": "WhereOrSet*",
      "pNew": "WhereLoop*",
      "pRec": "SrcItem*",
      "iPlanLimit": "LogEst",
      "bldFlags": "int"
    },
    "src_item": {
      "pSchema": "Schema*",
      "zName": "char*",
      "zAlias": "char*", 
      "pTab": "Table*",
      "pSelect": "Select*",
      "addrFillSub": "int",
      "regReturn": "int",
      "regResult": "int",
      "fg": "struct {...}",
      "iCursor": "i8",
      "iDb": "u8",
      "jointype": "u8",
      "viaCoroutine": "u8",
      "isNestedFrom": "u8"
    },
    "index": {
      "zName": "char*",
      "aiColumn": "i16*",
      "aiRowLogEst": "LogEst*",
      "pTable": "Table*",
      "pSchema": "Schema*",
      "zColAff": "char*",
      "pNext": "Index*",
      "onError": "u8",
      "autoIndex": "u8",
      "bUnordered": "u8",
      "noSkipScan": "u8",
      "hasStat1": "u8",
      "bLowQual": "u8",
      "nColumn": "unsigned",
      "nKeyCol": "unsigned",
      "isCovering": "unsigned"
    },
    "where_loop": {
      "prereq": "Bitmask",
      "maskedoff": "Bitmask",
      "iTab": "i8", 
      "iSortIdx": "i8",
      "rSetup": "LogEst",
      "rRun": "LogEst",
      "nOut": "LogEst",
      "nTerm": "u16",
      "nSkip": "u16",
      "wsFlags": "u32",
      "pIndex": "Index*"
    }
  },
  "validation_spec": {
    "memory_align": 8,
    "index_column_count": {"min": 1, "max": 2000},
    "where_term_count": {"min": 0, "max": 1000},
    "log_estimate_range": {"min": -2000, "max": 2000},
    "bitmask_range": {"min": 0, "max": 4294967295},
    "constraint_operators": ["EQ", "GT", "LE", "LT", "GE", "MATCH", "LIKE", "GLOB", "REGEXP", "NE", "ISNOT", "ISNOTNULL", "ISNULL", "IS"],
    "where_flags": ["WHERE_COLUMN_EQ", "WHERE_COLUMN_RANGE", "WHERE_COLUMN_IN", "WHERE_COLUMN_NULL", "WHERE_CONSTRAINT", "WHERE_TOP_LIMIT", "WHERE_BTM_LIMIT", "WHERE_BOTH_LIMIT", "WHERE_ORDERBY", "WHERE_ORDERBY_NORMAL", "WHERE_ORDERBY_MIN", "WHERE_ORDERBY_MAX", "WHERE_UNIQUE", "WHERE_INDEXED", "WHERE_REVERSE", "WHERE_AUTO_INDEX", "WHERE_VIRTUALTABLE", "WHERE_MULTI_OR", "WHERE_TEMP_INDEX", "WHERE_DISTINCT", "WHERE_COVER_SCAN", "WHERE_UNQ_WANTED", "WHERE_PARTIALIDX", "WHERE_IN_ABLE", "WHERE_EXPRIDX", "WHERE_IPK", "WHERE_BLOOMFILTER", "WHERE_SELFCULL", "WHERE_OMIT_OPEN_CLOSE", "WHERE_OMIT_CLOSE"]
  },
  "fc_mapping": {
    "source": "where.c:3125",
    "rationale": "whereLoopAddBtreeIndex - Critical B-Tree index loop addition for query optimization",
    "api_level": "internal"
  },
  "constraints": {
    "max_input_size": 16384,
    "min_input_size": 64,
    "endianness": "LE",
    "sqlite_version": "3.51.0",
    "requires_initialization": true
  },
  "notes": {
    "preconditions": [
      "sqlite3_initialize() called",
      "Valid WhereLoopBuilder structure provided",
      "Valid SrcItem with table information",
      "Valid Index structure for B-Tree analysis",
      "WHERE clause terms properly parsed",
      "Query optimization context established"
    ],
    "side_effects": [
      "WHERE loop cost estimation performed",
      "Index column analysis and constraint matching",
      "B-Tree scan plan generation",
      "Loop prerequisite bitmask calculation",
      "Order by optimization analysis",
      "Range constraint evaluation",
      "Statistics-based cost modeling"
    ],
    "error_conditions": [
      "SQLITE_NOMEM: Memory allocation failure",
      "SQLITE_INTERRUPTED: Query interrupted",
      "Invalid index structure corruption",
      "Infinite loop in constraint analysis",
      "Stack overflow in recursive optimization"
    ]
  }
}