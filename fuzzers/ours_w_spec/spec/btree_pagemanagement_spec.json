{
  "target": {
    "function_group": "btree_pagemanagement",
    "functions": [
      {
        "function": "btreeClearHasContent",
        "fc": "btree_004",
        "file": "btree.c",
        "line": 682
      },
      {
        "function": "btreeGetHasContent", 
        "fc": "btree_005",
        "file": "btree.c",
        "line": 673
      },
      {
        "function": "btreeInitPage",
        "fc": "btree_006", 
        "file": "btree.c",
        "line": 2214
      }
    ],
    "category": "B-Tree",
    "subcategory": "Page Management"
  },
  "struct_spec": {
    "btshared": {
      "pHasContent": "Bitvec*",
      "db": "sqlite3*",
      "mutex": "sqlite3_mutex*",
      "usableSize": "u32",
      "pageSize": "u32",
      "pPage1": "MemPage*",
      "inTransaction": "u8",
      "bDoTruncate": "u8"
    },
    "mempage": {
      "pBt": "BtShared*",
      "aData": "u8*",
      "pDbPage": "DbPage*",
      "pgno": "Pgno",
      "isInit": "u8",
      "hdrOffset": "u8",
      "leaf": "u8",
      "intKey": "u8",
      "intKeyLeaf": "u8",
      "nCell": "u16",
      "cellOffset": "u16",
      "nFree": "int",
      "maxLocal": "u16",
      "minLocal": "u16"
    },
    "bitvec": {
      "iSize": "u32",
      "nSet": "u32",
      "aHash": "u32*",
      "u": "union"
    },
    "page_header": {
      "page_type": "u8",
      "freeblock_offset": "u16", 
      "cell_count": "u16",
      "cell_content_area": "u16",
      "fragmented_bytes": "u8",
      "right_pointer": "u32"
    }
  },
  "validation_spec": {
    "memory_align": 8,
    "page_size": {"min": 512, "max": 65536},
    "pgno_range": {"min": 1, "max": 4294967295},
    "bitvec_size": {"min": 0, "max": 4294967295},
    "page_types": [2, 5, 10, 13],
    "header_offset": [0, 100],
    "cell_count": {"min": 0, "max": 65535},
    "mutex_required": true,
    "init_states": ["UNINITIALIZED", "INITIALIZED", "CORRUPTED"]
  },
  "fc_mapping": {
    "btreeClearHasContent": {
      "source": "btree.c:682",
      "rationale": "Critical bitvec cleanup function for transaction completion",
      "api_level": "internal"
    },
    "btreeGetHasContent": {
      "source": "btree.c:673", 
      "rationale": "Critical page content checking for cache optimization",
      "api_level": "internal"
    },
    "btreeInitPage": {
      "source": "btree.c:2214",
      "rationale": "Critical page initialization and validation function",
      "api_level": "internal"
    }
  },
  "constraints": {
    "max_input_size": 4096,
    "min_input_size": 64,
    "endianness": "LE",
    "sqlite_version": "3.51.0",
    "requires_initialization": true,
    "requires_mutex": true,
    "requires_valid_page": true
  },
  "notes": {
    "preconditions": [
      "sqlite3_initialize() called",
      "Valid BtShared object with mutex held",
      "Valid MemPage objects for page operations",
      "Proper transaction state for content operations"
    ],
    "side_effects": [
      "btreeClearHasContent: Destroys bitvec, frees memory",
      "btreeGetHasContent: Reads bitvec state, no modification", 
      "btreeInitPage: Updates page metadata, validates structure"
    ],
    "error_conditions": [
      "SQLITE_OK: Normal completion",
      "SQLITE_CORRUPT: Page structure corruption detected",
      "Memory allocation failures in bitvec operations",
      "Invalid page type or header corruption"
    ],
    "functional_relationships": [
      "btreeClearHasContent called at transaction end",
      "btreeGetHasContent used before page retrieval",
      "btreeInitPage called for every new page access",
      "Bitvec tracks page content state across operations"
    ],
    "coverage_targets": [
      "Bitvec allocation and deallocation",
      "Page type validation and parsing",
      "Header corruption detection",
      "Cell count and offset validation",
      "Transaction state consistency",
      "Memory boundary checks"
    ]
  }
}