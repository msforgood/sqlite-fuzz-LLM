{
  "target": { 
    "function": "sqlite3DbMallocSize",
    "fc": "malloc_size_001",
    "category": "Memory",
    "file": "malloc.c",
    "line": 376
  },
  "struct_spec": {
    "db_malloc_size_packet": {
      "ptrOffset": "u32",
      "scenario": "u8",
      "flags": "u8",
      "allocSize": "u32",
      "alignment": "u8",
      "ptrType": "u8",
      "testData": "u32[4]"
    }
  },
  "validation_spec": {
    "memory_align": 8,
    "ptr_offset": {"min": 0, "max": 1048576},
    "alloc_size": {"min": 1, "max": 1048576},
    "alignments": [1, 2, 4, 8, 16],
    "ptr_types": [0, 1, 2, 3],
    "max_scenarios": 8
  },
  "fc_mapping": {
    "source": "malloc.c:376",
    "rationale": "sqlite3DbMallocSize - Critical memory size determination with pointer validation",
    "api_level": "internal"
  },
  "constraints": {
    "max_input_size": 4096,
    "min_input_size": 28,
    "endianness": "LE",
    "sqlite_version": "3.51.0",
    "requires_initialization": true
  },
  "notes": {
    "preconditions": [
      "Valid database connection",
      "Non-null pointer parameter",
      "Pointer from valid allocation"
    ],
    "side_effects": [
      "Memory allocation size lookup",
      "Pointer validation",
      "Debug assertions"
    ],
    "error_conditions": [
      "Invalid pointer dereference",
      "Heap corruption detection",
      "Memory allocation tracking errors"
    ]
  }
}